name: Release Workflow
'on':
  pull_request:
    types:
      - closed
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Adjust based on your project's dependencies

      - name: Install hub
        run: |
          sudo snap install hub --classic  # Adjust based on your GitHub Actions environment

      - name: Update version in __init__.py
        run: |
          # Replace 'your_version_bump_script.py' with the script that updates the version
          python ./version_bump_script.py
          git add __init__.py
          git config --global user.email "jaydeep@sigzen.com"
          git config --global user.name "jaydeep-sigzen"
          git commit -m "Update version [skip ci]"
          git push

      - name: Get current version
        id: get_version
        run: |
          echo "version=$(grep -Po "(?<=__version__ = ')[^']+" ./gymmgt/__init__.py)" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: get_previous_tag
        run: |
          tags=$(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
          echo "tags=$tags"
          previous_tag=$(echo "$tags" | grep -oP '(?<="name": ")[^"]+' | head -n 1)
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT

      - name: Create tag and release
        id: create_release
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          version=${{ steps.get_version.outputs.version }}
          previous_tag=${{ steps.get_previous_tag.outputs.previous_tag }}

          tag_prefix=""

          case $version in
            *dev*)
              tag_prefix="alpha"
              ;;
          esac

          tag="$version"

          git config --local user.email "jaydeep@sigzen.com"
          git config --local user.name "jaydeep-sigzen"


          git tag $tag
          git push origin $tag


          changelog_url="https://github.com/jaydeep-sigzen/gymmgt/compare/$previous_tag...$version" 
          # Replace with your actual changelog URL

          body="Changelog: [$changelog_url]($changelog_url)"


          hub release create -m "Release $tag" -m "$body" $tag
